{"version":3,"file":"static/js/33.bf925154.chunk.js","mappings":"8SAoHA,EA3Gc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GACzB,OAAOA,EAAMC,KAAKH,KACnB,IACD,EAAeI,EAAAA,EAAAA,UAARC,GAAP,eACA,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmBMC,EAAiB,SAACT,GACtBF,GAASY,EAAAA,EAAAA,IAAY,CAACV,MAAAA,KACnBW,MAAK,SAACC,GAAW,IACjBC,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAcD,EACf,GACJ,EAUD,OAAId,GACK,SAAC,KAAD,CAAUgB,GAAG,IAAIC,SAAO,KAG/B,SAAC,IAAD,CAAeC,MAAO,2BAAtB,UACE,gBAAKC,UAAU,kBAAf,UACE,UAAC,IAAD,CACEd,KAAMA,EACNe,SAhBa,WAEnBf,EAAKgB,iBAAiBV,MAAK,YAA6B,IA3BrCW,EA2BWC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SA3BrBF,EA6BL,CAAEC,SAAAA,EAAUC,SAAAA,GA3B1BhB,GAAW,GACXV,GACE2B,EAAAA,EAAAA,IAAMH,IACNX,MAAK,SAACC,GACNG,EAAAA,GAAAA,QAAgB,4BAChBP,GAAW,GACXC,EAAeG,EAAKZ,MACrB,IACAa,OAAM,SAACC,GACNN,GAAW,GACXO,EAAAA,GAAAA,MAAcD,EACf,GAiBA,GACF,EAWOK,UAAU,UACVO,cAAe,CACbH,SAAU,QACVC,SAAU,UANd,WASE,gBAAKL,UAAU,QAAf,UACE,wDAEF,UAAC,IAAD,CAAMQ,SAAUpB,EAASqB,IAAI,wBAA7B,WACE,SAAC,SAAD,CACEC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,YAAY,EACZjB,QAAS,yCANf,UAUE,SAAC,IAAD,CAAOkB,QAAQ,SAACC,EAAA,EAAD,IAAkBC,YAAY,0BAE/C,SAAC,SAAD,CACEN,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,YAAY,EACZjB,QAAS,mCANf,UAUE,SAAC,IAAD,CACEkB,QAAQ,SAACG,EAAA,EAAD,IACRC,KAAK,WACLF,YAAY,oBAGhB,SAAC,SAAD,WACE,SAAC,IAAD,CACEE,KAAK,UACLC,SAAS,SACTnB,UAAU,oBAHZ,6BAQF,SAAC,SAAD,WACE,oFAOb,C","sources":["views/login/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Form, Input, Button, message, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DocumentTitle from \"react-document-title\";\r\nimport { login, getUserInfo } from \"@/store/modules/user\";\r\nimport \"./index.scss\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => {\r\n    return state.user.token\r\n  });\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = (payload) => {\r\n    // 登录完成后 发送请求 调用接口获取用户信息\r\n    setLoading(true);\r\n    dispatch(\r\n      login(payload)\r\n    ).then((data) => {\r\n      message.success(\"登录成功\");\r\n      setLoading(false);\r\n      handleUserInfo(data.token);\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      message.error(error);\r\n    })\r\n  };\r\n\r\n  // 获取用户信息\r\n  const handleUserInfo = (token) => {\r\n    dispatch(getUserInfo({token}))\r\n      .then((data) => {})\r\n      .catch((error) => {\r\n        message.error(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // 对所有表单字段进行检验\r\n    form.validateFields().then(({ username, password }) => {\r\n      // 检验成功\r\n      handleLogin({ username, password });\r\n    });\r\n  };\r\n\r\n  if (token) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n  return (\r\n    <DocumentTitle title={\"用户登录\"}>\r\n      <div className=\"login-container\">\r\n        <Form\r\n          form={form}\r\n          onFinish={handleSubmit}\r\n          className=\"content\"\r\n          initialValues={{\r\n            username: \"admin\",\r\n            password: \"123456\",\r\n          }}\r\n        >\r\n          <div className=\"title\">\r\n            <h2>用户登录</h2>\r\n          </div>\r\n          <Spin spinning={loading} tip=\"登录中...\">\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  whitespace: true,\r\n                  message: \"请输入用户名\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined />} placeholder=\"用户名\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  whitespace: true,\r\n                  message: \"请输入密码\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined />}\r\n                type=\"password\"\r\n                placeholder=\"密码\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <span>账号 : admin 密码 : 123456</span>\r\n            </Form.Item>\r\n          </Spin>\r\n        </Form>\r\n      </div>\r\n    </DocumentTitle>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["dispatch","useDispatch","token","useSelector","state","user","Form","form","useState","loading","setLoading","handleUserInfo","getUserInfo","then","data","catch","error","message","to","replace","title","className","onFinish","validateFields","payload","username","password","login","initialValues","spinning","tip","name","rules","required","whitespace","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType"],"sourceRoot":""}